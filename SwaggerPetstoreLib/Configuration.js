/**
 * SwaggerPetstoreLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

angular.module('SwaggerPetstoreLib')
    .factory('Configuration', ['APIHelper', 'Servers', 'Environments', Configuration]);

    function Configuration(APIHelper, Servers, Environments) {
        var environmentsMap = [],
            e = Environments, 
            s = Servers;
    
    
        environmentsMap[e.PRODUCTION] = [];
    
        environmentsMap[e.PRODUCTION][s.SERVER_1] = 'https://petstore.swagger.io/v2';
        environmentsMap[e.PRODUCTION][s.SERVER_2] = 'http://petstore.swagger.io/v2';
        environmentsMap[e.PRODUCTION][s.AUTH_SERVER] = 'https://petstore.swagger.io/oauth';

        return {
            // The object containing the OAuthToken
            oAuthToken: {},
    
            // Callback function to be called on token being set/refreshed
            // TODO: Replace the oAuthTokenUpdateCallback with an appropriate callback function
            oAuthTokenUpdateCallback: null,
    
            //OAuth 2 Client ID
            //TODO: Replace the oAuthClientId with an appropriate value
            oAuthClientId : 'TODO: Replace',

            //OAuth 2 Redirection endpoint or Callback Uri
            //TODO: Replace the oAuthRedirectUri with an appropriate value
            oAuthRedirectUri : 'TODO: Replace',

            /**
             * Current API environment
             * @type {string}
             */
            currentEnvironment: e.PRODUCTION,
    
            /**
             * Get base URI for a server in the current API environment
             * @param  {string|null} server Server name
             * @return {string}             Base URI for server
             */
            getBaseUri: function (server) {
                var url = environmentsMap[this.currentEnvironment][server || s.SERVER_1];
                var urlParams = {
                    };
                return APIHelper.appendUrlWithTemplateParameters(url, urlParams);
            }
        };
    }

}(angular));
